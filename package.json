{
  "name": "react_staging",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@testing-library/jest-dom": "^5.11.4",
    "@testing-library/react": "^11.1.0",
    "@testing-library/user-event": "^12.1.10",
    "antd": "^4.8.2",
    "axios": "^0.21.1",
    "babel-plugin-import": "^1.13.1",
    "customize-cra": "^1.0.0",
    "less": "^3.12.2",
    "less-loader": "^7.1.0",
    "nanoid": "^3.1.23",
    "prop-types": "^15.7.2",
    "pubsub-js": "^1.9.0",
    "react": "^17.0.1",
    "react-app-rewired": "^2.1.6",
    "react-dom": "^17.0.1",
    "react-router-dom": "^5.2.0",
    "react-scripts": "4.0.0",
    "web-vitals": "^0.2.4"
  },
  "scripts": {
    "start": "react-app-rewired start",
    "build": "react-app-rewired build",
    "test": "react-app-rewired test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "description": "1.拆分组件、实现静态组件，注意：className、style的写法\r \t\t2.动态初始化列表，如何确定将数据放在哪个组件的state中？\r \t\t\t\t\t——某个组件使用：放在其自身的state中\r \t\t\t\t\t——某些组件使用：放在他们共同的父组件state中（官方称此操作为：状态提升）\r \t\t3.关于父子之间通信：\r \t\t\t\t1.【父组件】给【子组件】传递数据：通过props传递\r \t\t\t\t2.【子组件】给【父组件】传递数据：通过props传递，要求父提前给子传递一个函数\r \t\t4.注意defaultChecked 和 checked的区别，类似的还有：defaultValue 和 value\r \t\t5.状态在哪里，操作状态的方法就在哪里",
  "main": "config-overrides.js",
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {}
}
